#get cpu temperature
$data = Get-WmiObject MSAcpi_ThermalZoneTemperature -Namespace "root/wmi"
$kelvin=@()
$kelvin = ($data.CurrentTemperature) / 10

#convert to celcius
$cels = $kelvin - 273

#display CPU temperature regardless of whether its 'normal' or too high
Write-Host "The CPU is operating at a temperature of: $cels degrees celcius"

#different error messages are displayed based on the extent of damage persistant operation at this temp would cause.
if($cels > 85)
{
	Write-Host "CPU temperature is extermely high. If it continues operating at this temperature much longer permenant damage to hardware will occur. It is likely a malicious agents actions are causing this issue so either turn off your device or take steps to review running processes and turn off those that are unfamiliar"
}
elseif($cels > 70)
{
	Write-Host "This is above the normal temperature range for a CPU (40 - 70 degrees celcius) this could indicate processor overclocking is occuring, investigate what is currently running on your device to ensure a malicious executable is not being run"
}
else
{
    Write-Host "This temperature falls within the acceptable range for CPU operation. It is unlikely malware such as a virus is being exectued."
}

#check BIOS information
Write-Host "The below list depicts the current BIOS settings, consider them and whether they match what should be running"

#get key BIOS details - enables comparison with what you know should be installed.
Get-WmiObject -Class Win32_Bios | Format-List -Property status,Name, SMBIOSPresent, __CLASS,_SUPERCLASS,__DYNASTY,__RELPATH,_DERIVATION,_NAMESPACE,_PATH,BIOSVersion,Manufacturer,primaryBIOS,ReleaseDate,Version,Scope,Path